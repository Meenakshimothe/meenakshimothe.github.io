# -*- coding: utf-8 -*-
"""Music_sales_EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G41WQeW7WDvM2-A8oZkm9UMGUcSPp55f
"""

import pandas as pd

# Load the file
df = pd.read_csv('/content/MusicData.csv')

# Show the first few rows
df.head()

"""### Loading the dataset into a Python environment (using pandas) to inspect its structure."""

import pandas as pd

# Load the dataset
df = pd.read_csv('MusicData.csv')

# Basic inspection
print("Dataset Shape:", df.shape)
print("\nColumns:", df.columns.tolist())
print("\nFirst 5 Rows:\n", df.head())
print("\nMissing Values:\n", df.isnull().sum())
print("\nUnique Formats:", df['Format'].unique())

"""### Cleaning  the dataset by handling missing and negative values, ensuring proper data types, and saving the cleaned data."""

import numpy as np
df['Value (Actual)'] = df['Value (Actual)'].replace('', np.nan)

# Handle negative values (assume errors, replace with 0)
df['Value (Actual)'] = df['Value (Actual)'].apply(lambda x: 0 if isinstance(x, (int, float)) and x < 0 else x)

# Convert data types
df['Year'] = df['Year'].astype(int)
df['Value (Actual)'] = pd.to_numeric(df['Value (Actual)'], errors='coerce')

# Drop unnecessary columns
df = df.drop(columns=['Number of Records'])

# Save cleaned data
df.to_csv('MusicData_cleaned.csv', index=False)

print("Cleaned Data Saved. Missing Values:\n", df.isnull().sum())

"""### To analyze physical vs. digital formats, categorize each format:"""

# Define physical and digital formats
physical_formats = [
    'CD', 'CD Single', 'Cassette', 'Cassette Single', 'LP/EP', 'Vinyl Single',
    '8 - Track', 'Other Tapes', 'Music Video (Physical)', 'DVD Audio', 'SACD'
]
digital_formats = [
    'Download Single', 'Download Album', 'Kiosk', 'Download Music Video',
    'Ringtones & Ringbacks', 'Paid Subscriptions', 'Limited Tier Paid Subscription',
    'On-Demand Streaming (Ad-Supported)', 'Other Ad-Supported Streaming',
    'Other Digital', 'SoundExchange Distributions', 'Synchronization'
]

# Add FormatType column
df['FormatType'] = df['Format'].apply(
    lambda x: 'Physical' if x in physical_formats else 'Digital' if x in digital_formats else 'Unknown'
)

# Save categorized data
df.to_csv('MusicData_categorized.csv', index=False)

print("Categorized Data Saved. Format Types:\n", df['FormatType'].value_counts())

"""### SQL Queries for Summary Statistics"""

import pandas as pd
import sqlite3

# Load categorized data
df = pd.read_csv('MusicData_categorized.csv')

# Create SQLite database in memory
conn = sqlite3.connect(':memory:')
df.to_sql('music_data', conn, index=False)

# Query 1: Total units by format type and year
query1 = """
SELECT Year, FormatType, SUM("Value (Actual)") as TotalUnits
FROM music_data
WHERE Metric = 'Units' AND "Value (Actual)" IS NOT NULL
GROUP BY Year, FormatType
ORDER BY Year, FormatType
"""
units_summary = pd.read_sql_query(query1, conn)
units_summary.to_csv('units_summary.csv', index=False)

# Query 2: Total value by format type and year
query2 = """
SELECT Year, FormatType, SUM("Value (Actual)") as TotalValue
FROM music_data
WHERE Metric = 'Value' AND "Value (Actual)" IS NOT NULL
GROUP BY Year, FormatType
ORDER BY Year, FormatType
"""
value_summary = pd.read_sql_query(query2, conn)
value_summary.to_csv('value_summary.csv', index=False)

# Query 3: Peak years for physical and digital units
query3 = """
SELECT FormatType, Year, MAX("Value (Actual)") as PeakUnits
FROM music_data
WHERE Metric = 'Units' AND "Value (Actual)" IS NOT NULL
GROUP BY FormatType
"""
peak_units = pd.read_sql_query(query3, conn)

print("Units Summary:\n", units_summary.head())
print("\nValue Summary:\n", value_summary.head())
print("\nPeak Units:\n", peak_units)

conn.close()

"""### Perform EDA to explore trends and relationships:"""

# Load summary data
units_summary = pd.read_csv('units_summary.csv')

# Pivot data for physical vs. digital units
units_pivot = units_summary.pivot(index='Year', columns='FormatType', values='TotalUnits').fillna(0)

# Calculate correlation between physical and digital units
correlation = units_pivot['Physical'].corr(units_pivot['Digital'])
print("Correlation between Physical and Digital Units:", correlation)

# Summary statistics
print("\nPhysical Units Stats:\n", units_pivot['Physical'].describe())
print("\nDigital Units Stats:\n", units_pivot['Digital'].describe())

# Identify years where digital surpassed physical
digital_surpass = units_pivot[units_pivot['Digital'] > units_pivot['Physical']]
print("\nYears Digital Units > Physical Units:\n", digital_surpass.head())

"""### Create visualizations to communicate findings:"""

import matplotlib.pyplot as plt
import seaborn as sns

# Load data
units_summary = pd.read_csv('units_summary.csv')
df = pd.read_csv('MusicData_categorized.csv')

# Line Chart: Physical vs. Digital Units Over Time
plt.figure(figsize=(12, 6))
sns.lineplot(data=units_summary, x='Year', y='TotalUnits', hue='FormatType')
plt.title('Physical vs. Digital Music Units Sold (1973-2019)')
plt.xlabel('Year')
plt.ylabel('Units Sold (Millions)')
plt.grid(True)
plt.savefig('physical_vs_digital_units.png')
plt.show()
plt.close()

# Stacked Area Chart: Format Contributions
units_pivot = df[df['Metric'] == 'Units'].pivot_table(
    index='Year', columns='Format', values='Value (Actual)', aggfunc='sum'
).fillna(0)
plt.figure(figsize=(12, 6))
units_pivot.plot.area(stacked=True)
plt.title('Music Format Units Sold Over Time (1973-2019)')
plt.xlabel('Year')
plt.ylabel('Units Sold (Millions)')
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.savefig('format_contributions.png')
plt.show()
plt.close()

# Bar Chart: Top Formats in 2019
df_2019 = df[(df['Year'] == 2019) & (df['Metric'] == 'Units') & (df['Value (Actual)'].notnull())]
df_2019 = df_2019.sort_values('Value (Actual)', ascending=False).head(10)
plt.figure(figsize=(12, 6))
sns.barplot(data=df_2019, x='Value (Actual)', y='Format')
plt.title('Top 10 Music Formats by Units Sold in 2019')
plt.xlabel('Units Sold (Millions)')
plt.ylabel('Format')
plt.savefig('top_formats_2019.png')
plt.show()
plt.close()

print("Visualizations saved as PNG files.")

"""### Perform statistical tests to validate findings:"""

from scipy.stats import ttest_ind
from sklearn.linear_model import LinearRegression
import numpy as np

# Load data
units_summary = pd.read_csv('units_summary.csv')

# T-Test: Physical vs. Digital Units (2010-2019)
recent_data = units_summary[units_summary['Year'] >= 2010]
physical_units = recent_data[recent_data['FormatType'] == 'Physical']['TotalUnits'].dropna()
digital_units = recent_data[recent_data['FormatType'] == 'Digital']['TotalUnits'].dropna()
t_stat, p_value = ttest_ind(physical_units, digital_units)
print("T-Test (Physical vs. Digital Units, 2010-2019):")
print("T-Statistic:", t_stat)
print("P-Value:", p_value)

# Regression: Physical Units ~ Digital Units + Year
units_pivot = units_summary.pivot(index='Year', columns='FormatType', values='TotalUnits').dropna()
X = units_pivot[['Digital']].join(pd.Series(units_pivot.index, index=units_pivot.index, name='Year'))
y = units_pivot['Physical']
model = LinearRegression()
model.fit(X, y)
print("\nRegression (Physical Units ~ Digital Units + Year):")
print("Coefficients (Digital, Year):", model.coef_)
print("Intercept:", model.intercept_)
print("R^2:", model.score(X, y))

"""Findings :

1.Physical Format Decline: Physical formats (e.g., CDs, cassettes) peaked in the 1990s but declined sharply after 2000 as digital formats grew.

2.Digital Format Rise: Digital formats, especially Paid Subscriptions (streaming), surged after 2010, surpassing physical units around 2012.

3.Vinyl Resurgence: LP/EP (vinyl) units increased from 2008, suggesting a niche market.

4.Correlation: Strong negative correlation between physical and digital units, indicating digital formats likely displaced physical sales.

5.2019 Market: Paid Subscriptions dominated, followed by Download Single and LP/EP.

### *Interesting* *Fact* : Despite the digital shift, vinyl (LP/EP) sales grew from 2.9 million units in 2008 to 19.1 million in 2019, a 558% increase, driven by collectors and audiophiles.

Marketing Recommendations:

1.Focus on Streaming: Invest in marketing for streaming platforms (e.g., Spotify, Apple Music) given the dominance of Paid Subscriptions.

2.Target Vinyl Niche: Promote vinyl to collectors and younger demographics (e.g., Gen Z) via limited-edition releases or Record Store Day events.

3.Reduce CD Investment: Scale back on CD production due to declining sales, except for specific genres (e.g., classical) with loyal CD buyers.

4.Digital Campaigns: Use social media and influencer partnerships to drive digital downloads and streaming subscriptions.

5.Monitor Trends: Track vinylâ€™s growth and emerging formats (e.g., high-resolution digital audio) to stay ahead of market shifts.
"""